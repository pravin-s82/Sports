name: Build and Deploy Optimizely CMS SaaS Frontend (Next.js)

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY_NAME: opticmssaas
  IMAGE_NAME: optimizely-nextjs-frontend
  WEBAPP_NAME: opti-cms-saas-nextjs
  NODE_VERSION: 22.19

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Enable Corepack and prepare Yarn
        run: |
          corepack enable
          corepack prepare yarn@4.9.1 --activate

      - name: Install dependencies and build app
        working-directory: apps/frontend
        run: |
          yarn install --frozen-lockfile
          yarn build

      # ⬇️ NEW: Upload build artifacts
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nextjs-build
          path: |
            .next
            package.json
            yarn.lock
            public
            next.config.js

      # Build Docker image
      - name: Azure Container Registry Login
        uses: azure/docker-login@v2
        with:
          login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
          username: ${{ secrets.AZURE_CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_CONTAINER_REGISTRY_PASSWORD }}

      # Build Docker image
      - name: Build Docker Image
        run: |
          docker build \
            -t $REGISTRY_NAME.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }} \
            -t $REGISTRY_NAME.azurecr.io/${{ env.IMAGE_NAME }}:latest \
            .

      # Push to ACR
      - name: Push Docker Image to ACR
        run: |
          docker push $REGISTRY_NAME.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push $REGISTRY_NAME.azurecr.io/${{ env.IMAGE_NAME }}:latest

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.WEBAPP_NAME }}
          images: ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
